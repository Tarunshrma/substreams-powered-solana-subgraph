// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";

export class RpcResponse {
  static encode(message: RpcResponse, writer: Writer): void {
    writer.uint32(10);
    writer.bytes(message.raw);

    writer.uint32(16);
    writer.bool(message.failed);
  }

  static decode(reader: Reader, length: i32): RpcResponse {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new RpcResponse();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.raw = reader.bytes();
          break;

        case 2:
          message.failed = reader.bool();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  raw: Uint8Array;
  failed: bool;

  constructor(raw: Uint8Array = new Uint8Array(0), failed: bool = false) {
    this.raw = raw;
    this.failed = failed;
  }
}
