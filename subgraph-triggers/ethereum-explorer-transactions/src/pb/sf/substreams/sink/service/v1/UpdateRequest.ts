// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";
import { Package } from "../../../v1/Package";

export class UpdateRequest {
  static encode(message: UpdateRequest, writer: Writer): void {
    const substreamsPackage = message.substreamsPackage;
    if (substreamsPackage !== null) {
      writer.uint32(10);
      writer.fork();
      Package.encode(substreamsPackage, writer);
      writer.ldelim();
    }

    writer.uint32(18);
    writer.string(message.deploymentId);

    writer.uint32(24);
    writer.bool(message.reset);
  }

  static decode(reader: Reader, length: i32): UpdateRequest {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new UpdateRequest();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.substreamsPackage = Package.decode(reader, reader.uint32());
          break;

        case 2:
          message.deploymentId = reader.string();
          break;

        case 3:
          message.reset = reader.bool();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  substreamsPackage: Package | null;
  deploymentId: string;
  reset: bool;

  constructor(
    substreamsPackage: Package | null = null,
    deploymentId: string = "",
    reset: bool = false
  ) {
    this.substreamsPackage = substreamsPackage;
    this.deploymentId = deploymentId;
    this.reset = reset;
  }
}
