// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.0

import { Writer, Reader } from "as-proto/assembly";
import { Mode } from "./Store/Mode";

export class Store {
  static encode(message: Store, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.moduleName);

    writer.uint32(16);
    writer.int32(message.mode);
  }

  static decode(reader: Reader, length: i32): Store {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new Store();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.moduleName = reader.string();
          break;

        case 2:
          message.mode = reader.int32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  moduleName: string;
  mode: Mode;

  constructor(moduleName: string = "", mode: Mode = 0) {
    this.moduleName = moduleName;
    this.mode = mode;
  }
}
